services:
  mongo:
    image: mongo:latest
    command:
      [
        "--replSet",
        "rs0",
        "--bind_ip_all",
        "--port",
        "27017"
      ]
    ports:
      - 27017:27017
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - mongo_data:/data/db
      - mongo_config:/data/configdb
    healthcheck:
      test: echo "try { rs.status() } catch (err) { rs.initiate({_id:'rs0',members:[{_id:0,host:'mongo:27017'}]}) }" | mongosh --port 27017 --quiet
      interval: 5s
      timeout: 30s
      start_period: 0s
      start_interval: 1s
      retries: 30
    restart: always

  redis:
    image: redis:latest
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli ping | grep PONG" ]
      interval: 1s
      timeout: 3s
      retries: 5
    command: [ "redis-server" ]
    ports:
      - 6379:6379
    volumes:
      - redis_data:/data

  webbankingserver:
    build:
      context: .
      dockerfile: ./Dockerfile
    environment:
      NODE_ENV: production
      SECRET_ACCESS_TOKEN: WebBankingAppSecretKey
      PORT: 3000
      EMAIL_PASSWORD: 'uaak cfyn imgo bcxg'
      EMAIL_USERNAME: 'shai.yarden@gmail.com'
    ports:
      - 3000:3000
      - 9229:9229
    depends_on:
      mongo:
        condition: service_healthy
      redis:
        condition: service_healthy

volumes:
  mongo_data:
  mongo_config:
  redis_data:
