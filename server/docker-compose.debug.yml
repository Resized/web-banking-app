services:
  webbankingserver:
    build:
      context: .
      dockerfile: ./Dockerfile
    environment:
      NODE_ENV: development
      SECRET_ACCESS_TOKEN: WebBankingAppSecretKey
      SECRET_REFRESH_TOKEN: WebBankingAppSecretKeyRefresh
      PORT: 3000
      EMAIL_PASSWORD: 'uaak cfyn imgo bcxg'
      EMAIL_USERNAME: 'shai.yarden@gmail.com'
      URI: 'mongodb+srv://yarden:123123123123@iotdatabase.yposswl.mongodb.net/WebBankingApp?retryWrites=true&w=majority&appName=IOTDataBase'

    ports:
      - 3000:3000
      - 9229:9229
    depends_on:
      # mongo:
      #   condition: service_healthy
      redis:
        condition: service_healthy
    command: npm run devstart
    develop:
      watch:
        - action: sync
          path: .
          target: /usr/src
          ignore:
            - node_modules/
        - action: rebuild
          path: package.json

  # mongo:
  #   image: mongo:latest
  #   command:
  #     [
  #       "--replSet",
  #       "rs0",
  #       "--bind_ip_all",
  #       "--port",
  #       "27017"
  #     ]
  #   ports:
  #     - 27017:27017
  #   extra_hosts:
  #     - "host.docker.internal:host-gateway"
  #   volumes:
  #     - mongo_data:/data/db
  #     - mongo_config:/data/configdb
  #   healthcheck:
  #     test: echo "try { rs.status() } catch (err) { rs.initiate({_id:'rs0',members:[{_id:0,host:'mongo:27017'}]}) }" | mongosh --port 27017 --quiet
  #     interval: 5s
  #     timeout: 30s
  #     start_period: 0s
  #     start_interval: 1s
  #     retries: 30
  #   restart: always

  redis:
    image: redis:latest
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli ping | grep PONG" ]
      interval: 1s
      timeout: 3s
      retries: 5
    command: [ "redis-server" ]
    ports:
      - 6379:6379
    volumes:
      - redis_data:/data

volumes:
  # mongo_data:
  # mongo_config:
  redis_data:
